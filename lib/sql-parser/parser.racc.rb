#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 320)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    44,    70,   160,   139,   206,    90,    90,    65,   100,   217,
   208,   133,   209,   210,   123,   218,     7,     7,    44,     8,
     8,   211,   127,   128,   146,    68,    69,    84,    83,    67,
    67,   143,    18,   177,    71,   134,    44,    67,    67,   211,
    47,    48,   135,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    67,    52,    47,    48,   138,   131,    47,    48,
    60,    32,    45,    36,    38,    39,    40,    41,    18,    49,
    44,    52,   159,    27,   132,     7,    47,    48,     8,    32,
    45,    36,    38,    39,    40,    41,   161,    49,    44,    52,
    93,    27,   162,   163,   164,   165,   129,    14,    92,   125,
    60,    60,    18,    94,   172,    96,    97,   173,    98,    99,
    47,    48,   124,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   177,    27,   119,     7,    47,    48,
     8,    32,    45,    36,    38,    39,    40,    41,   189,    49,
    44,    52,   192,   211,    67,   194,   195,   111,    67,    18,
   205,    60,   111,   103,    18,    85,    82,   213,    44,    81,
    80,   211,    47,    48,  -137,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    79,    52,    78,    77,    76,    75,
    47,    48,    74,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   -75,   139,    64,    63,    47,    48,
   228,    32,    45,    36,    38,    39,    40,    41,   177,    49,
    44,    52,   229,    27,   192,    60,   146,   213,    54,    53,
   233,    12,   235,   143,    18,   177,    67,    18,    44,   240,
    11,    27,    47,    48,   242,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   243,    52,   244,     9,    67,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   nil,   139,   nil,   nil,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,   nil,    49,
    44,    52,   nil,    27,   nil,   nil,   146,   nil,   nil,   nil,
   nil,   nil,   nil,   143,    18,   nil,   nil,   nil,    44,   nil,
   nil,    27,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,    27,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,    27,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,    27,   nil,   nil,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   211,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,   211,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,    44,   nil,   nil,   211,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,   nil,    52,    44,   nil,   nil,   211,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,    18,    49,
   nil,    52,    44,   nil,   nil,   211,    47,    48,   nil,    32,
    45,    36,    38,    39,    40,    41,    18,    49,   nil,    52,
    44,   nil,   nil,   211,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,    44,    52,   nil,    27,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,   nil,    27,   nil,   nil,   nil,   nil,
   nil,   113,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
    44,   nil,   nil,   211,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,    18,    49,   nil,    52,    44,   nil,
   nil,    27,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,    18,    49,   nil,    52,   nil,   nil,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
    18,    49,    44,    52,   nil,   139,   nil,     7,    47,    48,
     8,    32,    45,    36,    38,    39,    40,    41,   nil,    49,
   nil,    52,    93,   nil,   nil,    44,   146,   nil,   139,   nil,
   nil,   nil,   nil,   143,    18,    94,   nil,    96,    97,   nil,
    98,    99,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,   nil,    52,   143,    18,    44,   nil,
   nil,    27,   nil,   nil,   nil,    47,    48,   nil,    32,    45,
    36,    38,    39,    40,    41,   nil,    49,   nil,    52,   nil,
    44,   178,   179,    27,   180,   181,   182,   nil,   nil,   nil,
    18,   183,   184,   185,   186,   187,   188,   nil,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,   nil,    49,
    44,    52,    18,   139,   nil,   nil,   nil,   nil,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,   146,    27,   nil,   nil,   nil,   nil,
   nil,   143,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    47,    48,   nil,    32,    45,    36,    38,    39,    40,    41,
   nil,    49,    44,    52,    18,    27,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   nil,    49,   nil,    52,   nil,   nil,    44,   nil,
   nil,   139,   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    47,    48,   nil,    32,    45,    36,    38,    39,
    40,    41,   146,    49,    44,    52,   nil,   211,   nil,   143,
    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,    48,
   nil,    32,    45,    36,    38,    39,    40,    41,   nil,    49,
   nil,    52,   nil,   nil,   nil,   nil,    18,   nil,   nil,   nil,
   nil,   nil,   nil,    93,    47,    48,   nil,    32,    45,    36,
    38,    39,    40,    41,   nil,    49,    94,    52,    96,    97,
   nil,    98,    99,   199,   200 ]

racc_action_check = [
   103,    21,   114,   103,   175,    54,   125,    17,    56,   182,
   178,    97,   178,   178,    82,   182,     0,   189,   240,     0,
   189,   240,    88,    88,   103,    20,    20,    49,    49,    17,
    56,   103,   103,   175,    21,    98,   233,    54,   125,   233,
   103,   103,    99,   103,   103,   103,   103,   103,   103,   103,
   240,   103,   100,   103,    82,    82,   102,    94,   240,   240,
    93,   240,   240,   240,   240,   240,   240,   240,   233,   240,
   213,   240,   113,   213,    95,   213,   233,   233,   213,   233,
   233,   233,   233,   233,   233,   233,   115,   233,     8,   233,
    55,     8,   116,   117,   118,   122,    92,     8,    55,    86,
   131,   132,   213,    55,   137,    55,    55,   138,    55,    55,
   213,   213,    83,   213,   213,   213,   213,   213,   213,   213,
     8,   213,   211,   213,   140,   211,    80,   211,     8,     8,
   211,     8,     8,     8,     8,     8,     8,     8,   143,     8,
   210,     8,   144,   210,    74,   167,   168,    73,    65,   173,
   174,    63,   176,    62,   211,    52,    46,   180,   208,    45,
    44,   208,   211,   211,    42,   211,   211,   211,   211,   211,
   211,   211,   210,   211,    41,   211,    40,    39,    38,    36,
   210,   210,    33,   210,   210,   210,   210,   210,   210,   210,
   208,   210,   199,   210,    18,   199,    16,    13,   208,   208,
   200,   208,   208,   208,   208,   208,   208,   208,   201,   208,
   195,   208,   202,   195,   207,    12,   199,   209,    11,     9,
   212,     7,   217,   199,   199,   227,   228,   229,    79,   230,
     4,    79,   199,   199,   234,   199,   199,   199,   199,   199,
   199,   199,   195,   199,   236,   199,   237,     1,   244,   nil,
   195,   195,   nil,   195,   195,   195,   195,   195,   195,   195,
    79,   195,   192,   195,   nil,   192,   nil,   nil,    79,    79,
   nil,    79,    79,    79,    79,    79,    79,    79,   nil,    79,
    78,    79,   nil,    78,   nil,   nil,   192,   nil,   nil,   nil,
   nil,   nil,   nil,   192,   192,   nil,   nil,   nil,    77,   nil,
   nil,    77,   192,   192,   nil,   192,   192,   192,   192,   192,
   192,   192,    78,   192,   nil,   192,    22,   nil,   nil,    22,
    78,    78,   nil,    78,    78,    78,    78,    78,    78,    78,
    77,    78,   nil,    78,    27,   nil,   nil,    27,    77,    77,
   nil,    77,    77,    77,    77,    77,    77,    77,    22,    77,
   nil,    77,    76,   nil,   nil,    76,   nil,   nil,   nil,    22,
    22,    22,    22,    22,    22,    22,    27,    22,   nil,    22,
   188,   nil,   nil,   188,    27,    27,   nil,    27,    27,    27,
    27,    27,    27,    27,    76,    27,   nil,    27,   187,   nil,
   nil,   187,    76,    76,   nil,    76,    76,    76,    76,    76,
    76,    76,   188,    76,   nil,    76,   186,   nil,   nil,   186,
   188,   188,   nil,   188,   188,   188,   188,   188,   188,   188,
   187,   188,   nil,   188,   185,   nil,   nil,   185,   187,   187,
   nil,   187,   187,   187,   187,   187,   187,   187,   186,   187,
   nil,   187,   184,   nil,   nil,   184,   186,   186,   nil,   186,
   186,   186,   186,   186,   186,   186,   185,   186,   nil,   186,
   183,   nil,   nil,   183,   185,   185,   nil,   185,   185,   185,
   185,   185,   185,   185,   184,   185,   nil,   185,   nil,   nil,
   nil,   nil,   184,   184,   nil,   184,   184,   184,   184,   184,
   184,   184,   183,   184,    68,   184,   nil,    68,   nil,   nil,
   183,   183,   nil,   183,   183,   183,   183,   183,   183,   183,
   nil,   183,    75,   183,   nil,    75,   nil,   nil,   nil,   nil,
   nil,    75,   nil,   nil,   nil,   nil,    68,   nil,   nil,   nil,
   179,   nil,   nil,   179,    68,    68,   nil,    68,    68,    68,
    68,    68,    68,    68,    75,    68,   nil,    68,   129,   nil,
   nil,   129,    75,    75,   nil,    75,    75,    75,    75,    75,
    75,    75,   179,    75,   nil,    75,   nil,   nil,   nil,   nil,
   179,   179,   nil,   179,   179,   179,   179,   179,   179,   179,
   129,   179,   139,   179,   nil,   139,   nil,   139,   129,   129,
   139,   129,   129,   129,   129,   129,   129,   129,   nil,   129,
   nil,   129,   104,   nil,   nil,   146,   139,   nil,   146,   nil,
   nil,   nil,   nil,   139,   139,   104,   nil,   104,   104,   nil,
   104,   104,   139,   139,   nil,   139,   139,   139,   139,   139,
   139,   139,   nil,   139,   nil,   139,   146,   146,    71,   nil,
   nil,    71,   nil,   nil,   nil,   146,   146,   nil,   146,   146,
   146,   146,   146,   146,   146,   nil,   146,   nil,   146,   nil,
    70,   142,   142,    70,   142,   142,   142,   nil,   nil,   nil,
    71,   142,   142,   142,   142,   142,   142,   nil,    71,    71,
   nil,    71,    71,    71,    71,    71,    71,    71,   nil,    71,
   177,    71,    70,   177,   nil,   nil,   nil,   nil,   nil,   nil,
    70,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
   nil,    70,    69,    70,   177,    69,   nil,   nil,   nil,   nil,
   nil,   177,   177,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   177,   177,   nil,   177,   177,   177,   177,   177,   177,   177,
   nil,   177,    64,   177,    69,    64,   nil,   nil,   nil,   nil,
   nil,   nil,    69,    69,   nil,    69,    69,    69,    69,    69,
    69,    69,   nil,    69,   nil,    69,   nil,   nil,   172,   nil,
   nil,   172,   nil,   nil,    64,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    64,    64,   nil,    64,    64,    64,    64,    64,
    64,    64,   172,    64,   181,    64,   nil,   181,   nil,   172,
   172,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   172,   172,
   nil,   172,   172,   172,   172,   172,   172,   172,   nil,   172,
   nil,   172,   nil,   nil,   nil,   nil,   181,   nil,   nil,   nil,
   nil,   nil,   nil,   170,   181,   181,   nil,   181,   181,   181,
   181,   181,   181,   181,   nil,   181,   170,   181,   170,   170,
   nil,   170,   170,   170,   170 ]

racc_action_pointer = [
     6,   247,   nil,   nil,   228,   nil,   nil,   210,    83,   219,
   nil,   215,   178,   181,   nil,   nil,   192,    -8,   145,   nil,
   -20,   -13,   311,   nil,   nil,   nil,   nil,   329,   nil,   nil,
   nil,   nil,   nil,   133,   nil,   nil,   171,   nil,   170,   169,
   168,   166,   109,   nil,   111,   154,   101,   nil,   nil,   -29,
   nil,   nil,    96,   nil,     0,    86,    -7,   nil,   nil,   nil,
   nil,   nil,   127,   114,   737,   111,   nil,   nil,   489,   707,
   655,   633,   nil,   138,   107,   507,   347,   293,   275,   223,
   121,   nil,     9,    56,   nil,   nil,    95,   nil,    16,   nil,
   nil,   nil,    88,    23,    39,    56,   nil,   -10,    14,    21,
    15,   nil,    29,    -5,   598,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    63,    -7,    77,    83,    84,    85,   nil,
   nil,   nil,    90,   nil,   nil,     1,   nil,   nil,   nil,   543,
   nil,    63,    64,   nil,   nil,   nil,   nil,    76,   104,   577,
    86,   nil,   632,   130,   111,   nil,   600,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   136,   142,   nil,
   829,   nil,   763,   112,   141,    -5,   143,   685,   -20,   525,
   149,   789,   -20,   455,   437,   419,   401,   383,   365,     7,
   nil,   nil,   257,   nil,   nil,   205,   nil,   nil,   nil,   187,
   192,   170,   208,   nil,   nil,   nil,   nil,   183,   153,   209,
   135,   117,   189,    65,   nil,   nil,   nil,   187,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   187,   189,   190,
   198,   nil,   nil,    31,   225,   nil,   235,   242,   nil,   nil,
    13,   nil,   nil,   nil,   211,   nil,   nil ]

racc_action_default = [
  -149,  -149,    -1,    -2,    -4,   -15,   -16,  -149,  -149,  -149,
    -3,  -149,  -149,   -20,   -21,   -22,   -24,   -27,  -143,  -102,
  -105,  -108,  -149,  -110,  -111,  -112,  -113,  -149,  -115,  -116,
  -117,  -118,  -119,  -149,  -121,  -122,  -149,  -124,  -149,  -149,
  -149,  -149,  -130,  -131,  -135,  -149,  -149,  -141,  -142,  -149,
  -146,  -147,  -149,   247,  -149,  -149,   -32,   -33,   -35,   -36,
   -75,   -19,   -52,  -149,  -149,  -149,   -26,  -143,  -149,  -149,
  -149,  -149,  -109,  -149,  -149,  -149,  -149,  -149,  -149,  -149,
  -133,  -134,  -149,  -149,  -145,  -148,    -5,    -7,   -11,    -9,
   -10,   -17,  -149,  -149,  -149,  -149,   -40,   -42,   -44,   -45,
  -149,   -31,   -54,  -149,   -29,   -23,   -25,  -103,  -104,  -106,
  -107,  -114,  -120,  -149,  -149,  -149,  -149,  -149,  -149,  -132,
  -136,  -138,  -149,  -140,  -144,  -149,    -8,   -12,   -13,  -149,
   -37,  -149,  -149,   -41,   -43,   -46,   -30,   -59,  -149,  -149,
   -53,   -61,  -149,  -149,   -78,   -80,  -149,   -83,   -84,   -85,
   -87,   -88,   -89,   -90,   -91,   -92,   -99,  -100,  -101,  -123,
  -125,  -126,  -127,  -128,  -129,  -139,    -6,  -149,   -69,   -38,
  -149,   -28,  -149,  -149,  -149,  -149,  -101,  -149,  -149,  -149,
  -149,  -149,  -149,  -149,  -149,  -149,  -149,  -149,  -149,  -149,
   -34,   -74,  -149,   -82,   -18,  -149,   -39,   -47,   -48,  -149,
  -149,   -60,   -55,   -57,   -58,   -14,   -86,   -79,  -149,  -149,
  -149,  -149,  -149,  -149,   -65,   -66,   -71,  -149,   -73,   -93,
   -94,   -95,   -96,   -97,   -98,   -81,   -68,   -49,  -149,  -149,
  -149,   -64,   -70,  -149,  -149,   -72,  -149,   -51,   -77,   -56,
  -149,   -63,   -67,   -50,  -149,   -62,   -76 ]

racc_goto_table = [
    66,    55,    17,   214,   203,    56,   140,    87,   167,     1,
   190,   109,   110,   107,   108,    13,    62,   102,   137,   171,
    61,    73,   191,   204,    15,   196,   197,   198,    91,   236,
   237,   202,   231,   126,    86,    10,     4,    89,   207,   101,
   225,   193,   175,     3,     2,   122,    72,   190,   106,   120,
   121,   nil,   104,   nil,   nil,   nil,    56,   112,    17,   212,
   239,   216,   nil,   219,   220,   221,   222,   223,   224,   114,
   115,   116,   117,   118,   226,   201,   190,   nil,   166,   204,
   105,   nil,   nil,   136,   nil,   nil,   130,   nil,   230,   nil,
   232,   nil,   234,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   227,   nil,   nil,   nil,   nil,   nil,    89,   nil,
   nil,   nil,   nil,   241,   nil,   nil,   nil,   nil,   nil,   nil,
   245,   170,   nil,   168,   169,    56,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   176,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   168,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    73,   nil,   168,   nil,   nil,
   nil,   238,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   246 ]

racc_goto_check = [
    10,    14,    21,    45,    39,    26,    35,     7,    16,     1,
    11,    57,    57,    56,    56,    17,    22,    23,    24,    25,
    18,    21,    28,    40,    19,    32,    33,    34,    15,    36,
    37,    38,    45,     9,     6,     5,     4,    10,    49,    10,
    50,    51,    35,     3,     2,    59,    60,    11,    10,    72,
    73,   nil,    14,   nil,   nil,   nil,    26,    10,    21,    43,
    39,    43,   nil,    43,    43,    43,    43,    43,    43,    21,
    21,    21,    21,    21,    16,    35,    11,   nil,     7,    40,
    19,   nil,   nil,    10,   nil,   nil,    26,   nil,    43,   nil,
    43,   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    35,   nil,   nil,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,    43,   nil,   nil,   nil,   nil,   nil,   nil,
    43,    14,   nil,    21,    26,    26,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    21,   nil,    21,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,     9,    44,    43,    36,    31,   -20,   -47,   nil,   -55,
   -17,  -133,   nil,   nil,   -11,   -27,  -121,     7,     7,    16,
   nil,    -6,     3,   -45,   -84,  -118,    -7,   nil,  -121,   nil,
   nil,   nil,  -145,  -144,  -143,   -97,  -199,  -198,  -142,  -169,
  -150,   nil,   nil,  -120,   nil,  -177,   nil,   nil,   nil,  -139,
  -152,  -105,   nil,   nil,   nil,   nil,   -55,   -59,   nil,   -37,
    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -33,   -32,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   174,   nil,   nil,   nil,    88,   nil,
    34,   141,     5,     6,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   158,   nil,   nil,   nil,   nil,    35,    57,   215,    58,
    59,    95,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    25,   157,   151,   142,   152,   nil,   153,   154,   155,   144,
   145,   147,   148,   149,   150,   156,    19,    20,    21,    22,
    23,    24,    26,    28,    29,    30,    31,    33,    37,    42,
    43,    46,   nil,   nil,    50,    51 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 61, :_reduce_none,
  1, 62, :_reduce_none,
  2, 63, :_reduce_3,
  0, 65, :_reduce_none,
  3, 65, :_reduce_5,
  3, 66, :_reduce_6,
  1, 66, :_reduce_none,
  2, 67, :_reduce_8,
  1, 68, :_reduce_none,
  1, 68, :_reduce_10,
  0, 69, :_reduce_11,
  1, 69, :_reduce_12,
  1, 69, :_reduce_13,
  3, 71, :_reduce_14,
  1, 64, :_reduce_none,
  1, 64, :_reduce_none,
  4, 73, :_reduce_17,
  4, 75, :_reduce_18,
  3, 72, :_reduce_19,
  2, 72, :_reduce_20,
  1, 77, :_reduce_21,
  1, 77, :_reduce_22,
  3, 79, :_reduce_23,
  1, 79, :_reduce_none,
  3, 80, :_reduce_25,
  2, 80, :_reduce_26,
  1, 80, :_reduce_none,
  4, 78, :_reduce_28,
  2, 82, :_reduce_29,
  3, 74, :_reduce_30,
  2, 74, :_reduce_31,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 88, :_reduce_none,
  1, 87, :_reduce_none,
  1, 87, :_reduce_none,
  3, 89, :_reduce_37,
  4, 89, :_reduce_38,
  5, 90, :_reduce_39,
  1, 91, :_reduce_40,
  2, 91, :_reduce_41,
  1, 91, :_reduce_42,
  2, 91, :_reduce_43,
  1, 91, :_reduce_44,
  1, 91, :_reduce_45,
  2, 91, :_reduce_46,
  1, 92, :_reduce_none,
  1, 92, :_reduce_none,
  2, 93, :_reduce_49,
  4, 94, :_reduce_50,
  1, 96, :_reduce_none,
  0, 83, :_reduce_none,
  2, 83, :_reduce_53,
  0, 84, :_reduce_none,
  3, 84, :_reduce_55,
  3, 98, :_reduce_56,
  1, 98, :_reduce_none,
  1, 99, :_reduce_none,
  0, 85, :_reduce_none,
  2, 85, :_reduce_60,
  1, 101, :_reduce_none,
  6, 102, :_reduce_62,
  5, 102, :_reduce_63,
  4, 104, :_reduce_64,
  3, 104, :_reduce_65,
  1, 105, :_reduce_none,
  3, 105, :_reduce_67,
  3, 76, :_reduce_68,
  1, 76, :_reduce_none,
  4, 106, :_reduce_70,
  3, 106, :_reduce_71,
  4, 107, :_reduce_72,
  3, 107, :_reduce_73,
  2, 108, :_reduce_74,
  1, 86, :_reduce_75,
  3, 97, :_reduce_76,
  1, 97, :_reduce_none,
  1, 95, :_reduce_none,
  3, 95, :_reduce_79,
  1, 109, :_reduce_none,
  3, 109, :_reduce_81,
  2, 110, :_reduce_82,
  1, 110, :_reduce_none,
  1, 111, :_reduce_none,
  1, 112, :_reduce_none,
  3, 112, :_reduce_86,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  1, 113, :_reduce_none,
  3, 114, :_reduce_93,
  3, 114, :_reduce_94,
  3, 114, :_reduce_95,
  3, 114, :_reduce_96,
  3, 114, :_reduce_97,
  3, 114, :_reduce_98,
  1, 103, :_reduce_none,
  1, 103, :_reduce_none,
  1, 115, :_reduce_none,
  1, 81, :_reduce_none,
  3, 116, :_reduce_103,
  3, 116, :_reduce_104,
  1, 116, :_reduce_none,
  3, 117, :_reduce_106,
  3, 117, :_reduce_107,
  1, 117, :_reduce_none,
  2, 118, :_reduce_109,
  1, 118, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  1, 120, :_reduce_none,
  3, 120, :_reduce_114,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 123, :_reduce_none,
  1, 123, :_reduce_none,
  1, 124, :_reduce_119,
  3, 100, :_reduce_120,
  1, 100, :_reduce_none,
  1, 127, :_reduce_none,
  4, 122, :_reduce_123,
  1, 122, :_reduce_none,
  4, 128, :_reduce_125,
  4, 128, :_reduce_126,
  4, 128, :_reduce_127,
  4, 128, :_reduce_128,
  4, 128, :_reduce_129,
  1, 125, :_reduce_none,
  1, 125, :_reduce_none,
  3, 129, :_reduce_132,
  2, 129, :_reduce_133,
  2, 129, :_reduce_134,
  1, 129, :_reduce_135,
  3, 130, :_reduce_136,
  1, 131, :_reduce_none,
  1, 132, :_reduce_none,
  2, 133, :_reduce_139,
  1, 133, :_reduce_140,
  1, 119, :_reduce_141,
  1, 119, :_reduce_142,
  1, 70, :_reduce_143,
  3, 126, :_reduce_144,
  2, 126, :_reduce_145,
  1, 126, :_reduce_none,
  1, 134, :_reduce_none,
  2, 135, :_reduce_148 ]

racc_reduce_n = 149

racc_shift_n = 247

racc_token_table = {
  false => 0,
  :error => 1,
  :ORDER => 2,
  :BY => 3,
  :comma => 4,
  :unsigned_integer => 5,
  :ASC => 6,
  :DESC => 7,
  :left_paren => 8,
  :right_paren => 9,
  :INSERT => 10,
  :INTO => 11,
  :VALUES => 12,
  :SELECT => 13,
  :asterisk => 14,
  :AS => 15,
  :FROM => 16,
  :CROSS => 17,
  :JOIN => 18,
  :INNER => 19,
  :LEFT => 20,
  :OUTER => 21,
  :RIGHT => 22,
  :FULL => 23,
  :ON => 24,
  :USING => 25,
  :WHERE => 26,
  :GROUP => 27,
  :HAVING => 28,
  :NOT => 29,
  :BETWEEN => 30,
  :AND => 31,
  :IN => 32,
  :LIKE => 33,
  :IS => 34,
  :NULL => 35,
  :EXISTS => 36,
  :identifier => 37,
  :OR => 38,
  :equals_operator => 39,
  :not_equals_operator => 40,
  :less_than_operator => 41,
  :greater_than_operator => 42,
  :less_than_or_equals_operator => 43,
  :greater_than_or_equals_operator => 44,
  :plus_sign => 45,
  :minus_sign => 46,
  :solidus => 47,
  :CURRENT_USER => 48,
  :period => 49,
  :COUNT => 50,
  :AVG => 51,
  :MAX => 52,
  :MIN => 53,
  :SUM => 54,
  :E => 55,
  :quote => 56,
  :character_string_literal => 57,
  :DATE => 58,
  :date_string => 59 }

racc_nt_base = 60

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "ORDER",
  "BY",
  "comma",
  "unsigned_integer",
  "ASC",
  "DESC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "direct_select_statement_multiple_rows",
  "query_expression",
  "order_by_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_name",
  "subquery",
  "query_specification",
  "insert_specification",
  "table_reference",
  "value_list",
  "in_value_list",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "general_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_6(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_8(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 37)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_18(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_20(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_23(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 75)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 87)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_39(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 94)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_41(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_56(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_68(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 69 omitted

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_76(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_81(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

module_eval(<<'.,.,', 'parser.racc', 194)
  def _reduce_86(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_95(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 208)
  def _reduce_96(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_97(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 99 omitted

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

module_eval(<<'.,.,', 'parser.racc', 223)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 224)
  def _reduce_104(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 229)
  def _reduce_107(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 233)
  def _reduce_109(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_114(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 121 omitted

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.racc', 261)
  def _reduce_123(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_132(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 278)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 137 omitted

# reduce 138 omitted

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_139(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 293)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 296)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 297)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 306)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 146 omitted

# reduce 147 omitted

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
